Projeto de Gerenciamento Financeiro
Descrição
Este projeto é uma aplicação web desenvolvida em Node.js, que permite aos usuários gerenciar suas finanças pessoais registrando receitas e despesas. O sistema permite o armazenamento e a consulta dessas transações, facilitando o controle financeiro.

Requisitos de Sistema
Node.js: Ambiente de execução JavaScript no servidor.
NPM: Gerenciador de pacotes para JavaScript, utilizado para instalar as bibliotecas necessárias.
Tecnologias Utilizadas
Express: Framework web para Node.js que facilita a criação de servidores HTTP.
Body-Parser: Middleware do Express que facilita o processamento de dados JSON e de formulários.
Bcrypt: Biblioteca para hashing de senhas, garantindo segurança no armazenamento das credenciais dos usuários.
Session: Middleware para gerenciamento de sessões de usuário no Express.
File System (fs): Módulo do Node.js usado para operações de leitura e escrita de arquivos.
Configuração e Instalação
Clone o repositório:

bash
Copy code
git clone [URL do Repositório]
Instalação de Dependências:

bash
Copy code
cd [Nome da Pasta do Projeto]
npm install
Executar o Servidor:

Copy code
node index.js
Uso
Acessar a Aplicação:

Abra um navegador e visite http://localhost:3001/registro para se registrar.
Visite http://localhost:3001/login para entrar.
Adicionar Transações:

Utilize os modais acessíveis através dos botões na página inicial para adicionar receitas e despesas.
Visualização das Transações:

As transações são listadas na tabela na página principal, onde são exibidos os valores totais de receitas, despesas e o saldo geral.
Funcionalidades Detalhadas
Gerenciamento de Usuários: Utiliza criptografia para armazenar seguramente as senhas dos usuários.

Armazenamento de Dados:

As transações são armazenadas em um arquivo JSON no servidor, permitindo persistência de dados entre sessões.
Cada transação é associada a um usuário específico, garantindo que os dados sejam pessoais e seguros.
Consulta de Dados:

Ao fazer login, o sistema consulta o arquivo JSON para recuperar e exibir as transações do usuário logado.
Segurança
As senhas dos usuários são hasheadas usando Bcrypt antes de serem armazenadas, oferecendo uma camada robusta de segurança.
Observações Finais
Este projeto é uma demonstração técnica e educacional, e é aconselhável implementar medidas de segurança adicionais e testes abrangentes antes de qualquer uso real.

